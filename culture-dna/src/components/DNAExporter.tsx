import React, { useRef } from "react";
import { motion } from "framer-motion";
import html2canvas from "html2canvas";

type Props = {
  dnaData: {
    inputs: {
      favActor: string;
      favMusic: string;
      favCuisine: string;
      favCity: string;
    };
    results: any[];
    insights: { [key: string]: any[] };
    personality?: any;
  };
};

export default function DNAExporter({ dnaData }: Props) {
  const exportRef = useRef<HTMLDivElement>(null);

  const handleExportImage = async () => {
    if (!exportRef.current) return;

    try {
      const canvas = await html2canvas(exportRef.current, {
        backgroundColor: '#0f0f23',
        scale: 2,
        useCORS: true,
        width: 800,
        height: 600,
      });

      const link = document.createElement('a');
      link.download = 'cultural-dna-synthwave-profile.png';
      link.href = canvas.toDataURL();
      link.click();
    } catch (error) {
      console.error('Export failed:', error);
      alert('Export failed. Please try again.');
    }
  };

  const handleShareProfile = async () => {
    // Create a temporary element for the DNA + Personality export
    const tempDiv = document.createElement('div');
    tempDiv.style.position = 'absolute';
    tempDiv.style.left = '-9999px';
    tempDiv.style.width = '800px';
    tempDiv.style.height = '1000px';
    tempDiv.style.background = 'linear-gradient(135deg, #0f0f23 0%, #1a0033 50%, #2d1b69 100%)';
    tempDiv.style.padding = '40px';
    tempDiv.style.fontFamily = 'Rajdhani, sans-serif';
    tempDiv.style.color = '#ff6b9d';

    tempDiv.innerHTML = `
      <div style="text-align: center; margin-bottom: 30px;">
        <h1 style="font-size: 48px; font-weight: 900; margin: 0; background: linear-gradient(45deg, #ff6b9d, #c44569, #ff9ff3); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">
          üß¨ CULTURAL DNA
        </h1>
        <div style="font-size: 18px; color: #ff6b9d; margin-top: 10px;">Synthwave Taste Analysis Complete</div>
      </div>

      <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 30px;">
        <div>
          <div style="display: flex; align-items: center; margin-bottom: 15px;">
            <span style="margin-right: 10px;">üé≠</span>
            <span>${dnaData.inputs.favActor || 'Not specified'}</span>
          </div>
          <div style="display: flex; align-items: center; margin-bottom: 15px;">
            <span style="margin-right: 10px;">üéµ</span>
            <span>${dnaData.inputs.favMusic || 'Not specified'}</span>
          </div>
        </div>
        <div>
          <div style="display: flex; align-items: center; margin-bottom: 15px;">
            <span style="margin-right: 10px;">üçΩ</span>
            <span>${dnaData.inputs.favCuisine || 'Not specified'}</span>
          </div>
          <div style="display: flex; align-items: center; margin-bottom: 15px;">
            <span style="margin-right: 10px;">üåÜ</span>
            <span>${dnaData.inputs.favCity || 'Not specified'}</span>
          </div>
        </div>
      </div>

      ${dnaData.personality ? `
        <div style="margin-bottom: 30px;">
          <h3 style="text-align: center; font-size: 24px; margin-bottom: 20px; color: #ff9ff3;">
            üß† PERSONALITY PROFILE: ${dnaData.personality.cultural_archetype.toUpperCase()}
          </h3>
          <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px;">
            ${dnaData.personality.traits.slice(0, 4).map((trait: any) => `
              <div style="background: rgba(255, 107, 157, 0.1); padding: 15px; border-radius: 8px; border: 1px solid rgba(255, 107, 157, 0.3);">
                <div style="font-weight: bold; margin-bottom: 5px;">${trait.name}</div>
                <div style="font-size: 18px; color: #ff9ff3;">${(trait.score * 100).toFixed(0)}%</div>
              </div>
            `).join('')}
          </div>
        </div>
      ` : ''}

      <div style="text-align: center; border-top: 1px solid rgba(255, 107, 157, 0.3); padding-top: 20px;">
        <div style="font-size: 24px; font-weight: bold; color: #ff9ff3;">
          ${Object.values(dnaData.insights).reduce((total, insights) => total + insights.length, 0)}
        </div>
        <div style="font-size: 14px; color: rgba(255, 107, 157, 0.8);">CULTURAL CONNECTIONS DISCOVERED</div>
        <div style="font-size: 12px; color: rgba(255, 107, 157, 0.6); margin-top: 20px;">
          Generated by Cultural DNA Synthwave Explorer
        </div>
      </div>
    `;

    document.body.appendChild(tempDiv);

    try {
      const canvas = await html2canvas(tempDiv, {
        backgroundColor: '#0f0f23',
        scale: 2,
        useCORS: true,
      });

      const blob = await new Promise<Blob>((resolve) => {
        canvas.toBlob((blob) => resolve(blob!), 'image/png');
      });

      if (navigator.share && navigator.canShare({ files: [new File([blob], 'cultural-dna-profile.png', { type: 'image/png' })] })) {
        await navigator.share({
          title: 'My Cultural DNA Profile',
          text: 'Check out my synthwave cultural DNA analysis!',
          files: [new File([blob], 'cultural-dna-profile.png', { type: 'image/png' })]
        });
      } else {
        // Fallback: download the image
        const link = document.createElement('a');
        link.download = 'cultural-dna-profile.png';
        link.href = canvas.toDataURL();
        link.click();
        
        // Also copy text to clipboard
        const profileText = `üß¨ My Cultural DNA Profile:
üé≠ Actor: ${dnaData.inputs.favActor}
üéµ Music: ${dnaData.inputs.favMusic}
üçΩ Cuisine: ${dnaData.inputs.favCuisine}
üåÜ City: ${dnaData.inputs.favCity}

Generated with Cultural DNA Synthwave Explorer!`;
        
        navigator.clipboard.writeText(profileText);
        alert('Profile image downloaded and text copied to clipboard!');
      }
    } catch (error) {
      console.error('Share failed:', error);
      alert('Share failed. Please try again.');
    } finally {
      document.body.removeChild(tempDiv);
    }
  };

  return (
    <div className="flex space-x-4">
      <motion.button
        whileHover={{ scale: 1.05 }}
        whileTap={{ scale: 0.95 }}
        onClick={handleExportImage}
        className="synthwave-btn text-white px-6 py-3 rounded-lg font-semibold text-sm transition-all duration-300"
      >
        üì∏ EXPORT DNA
      </motion.button>

      <motion.button
        whileHover={{ scale: 1.05 }}
        whileTap={{ scale: 0.95 }}
        onClick={handleShareProfile}
        className="synthwave-btn text-white px-6 py-3 rounded-lg font-semibold text-sm transition-all duration-300"
      >
        üîó SHARE PROFILE
      </motion.button>

      {/* Hidden export template */}
      <div 
        ref={exportRef}
        className="fixed -left-[9999px] w-[800px] h-[600px] p-8"
        style={{ background: 'linear-gradient(135deg, #0f0f23 0%, #1a0033 50%, #2d1b69 100%)' }}
      >
        <div className="text-center mb-6">
          <h2 className="text-4xl font-['Orbitron'] font-black gradient-text mb-2">
            üß¨ CULTURAL DNA
          </h2>
          <div className="text-pink-300 text-lg">Synthwave Analysis Complete</div>
        </div>

        <div className="grid grid-cols-2 gap-4 mb-6 text-white">
          <div className="space-y-3">
            <div className="flex items-center space-x-2">
              <span>üé≠</span>
              <span className="text-sm">{dnaData.inputs.favActor || 'Not specified'}</span>
            </div>
            <div className="flex items-center space-x-2">
              <span>üéµ</span>
              <span className="text-sm">{dnaData.inputs.favMusic || 'Not specified'}</span>
            </div>
          </div>
          <div className="space-y-3">
            <div className="flex items-center space-x-2">
              <span>üçΩ</span>
              <span className="text-sm">{dnaData.inputs.favCuisine || 'Not specified'}</span>
            </div>
            <div className="flex items-center space-x-2">
              <span>üåÜ</span>
              <span className="text-sm">{dnaData.inputs.favCity || 'Not specified'}</span>
            </div>
          </div>
        </div>

        <div className="border-t border-pink-500/30 pt-4 text-center">
          <div className="text-pink-300 text-2xl font-bold">
            {Object.values(dnaData.insights).reduce((total, insights) => total + insights.length, 0)}
          </div>
          <div className="text-pink-400/80 text-xs">CULTURAL CONNECTIONS</div>
        </div>
      </div>
    </div>
  );
}